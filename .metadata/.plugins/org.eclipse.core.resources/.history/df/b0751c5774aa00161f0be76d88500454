package task2;

public class GSM {

	String model; // модел на телефона
	boolean hasSimCard; // дали в телефона е заредена SIM карта
	String simMobileNumber; // номер на SIM картата, ако е зададена (телефонен
							// номер)
	double outgoingCallsDuration; // общото време на изходящите повиквания

	String lastIncomingCall; // последно входящо повикване
	String lastOutgoindCall; // последно изходящо повикване

	void insertSimCard(String newSimMobileNumber) {
		if (newSimMobileNumber.substring(0, 2).equals("08") && newSimMobileNumber.length() == 10) {
			simMobileNumber = newSimMobileNumber;
			hasSimCard = true;
		} else {
			System.out.println("Invalid sim mobile number.");
		}
	}

	void removeSimCard() {
		hasSimCard = false;
	}

	void call(GSM receiver, double duration) {

		boolean validCall = true;

		if (this.hasSimCard == false || receiver.hasSimCard == false) {
			validCall = false;
			System.out.println("Caller and receiver must have sim card.");
		}

		if (simMobileNumber.equals(receiver.simMobileNumber)) {
			validCall = false;
			System.out.println("Caller and receiver must be different.");
		}

		if (duration <= 0) {
			validCall = false;
			System.out.println("Duration must not be negative");
		}

		if (validCall) {
			lastOutgoindCall = receiver.simMobileNumber;
			receiver.lastIncomingCall = simMobileNumber;
			outgoingCallsDuration += duration;
		}

	}

	void getSumForCall() {
		System.out.println("Total cost for calls is " + outgoingCallsDuration * Call.priceForMinute);
	}

	void printInfoForLastOutgoingCall() {
		if (lastOutgoindCall != null) {
			System.out.println("Last outgoing call for sim number " + simMobileNumber + " is " + lastOutgoindCall);
		} else {
			System.out.println("No outgoing calls");
		}
	}

	void printInfoForLastIncomingCall() {
		if (lastIncomingCall != null) {
			System.out.println("Last incoming call for sim number " + simMobileNumber + " is " + lastIncomingCall);
		} else {
			System.out.println("No incoming calls");
		}
	}

}
